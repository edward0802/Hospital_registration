// <auto-generated />
using System;
using InternetHospital.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace InternetHospital.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20181010225045_InitialMigrationsHospitalOne")]
    partial class InitialMigrationsHospitalOne
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("Region");

                    b.Property<string>("Street");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Diploma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiplomaURL");

                    b.Property<string>("DoctorId");

                    b.Property<bool>("IsValid");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("Diplomas");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Doctor", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressId");

                    b.Property<string>("DoctorsInfo");

                    b.Property<bool>("IsApproved");

                    b.Property<string>("LicenseURL");

                    b.Property<string>("PatientId");

                    b.Property<int?>("SpecializationId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("PatientId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Patient", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressId");

                    b.Property<string>("AvatarURL");

                    b.Property<DateTime>("BirthDay");

                    b.Property<string>("FirstName");

                    b.Property<string>("PassportURL");

                    b.Property<string>("Phone");

                    b.Property<string>("SecondName");

                    b.Property<string>("ThirdName");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Specializations");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<int?>("RoleId");

                    b.Property<int?>("StatusId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Diploma", b =>
                {
                    b.HasOne("InternetHospital.DataAccess.Entities.Doctor")
                        .WithMany("Diplomas")
                        .HasForeignKey("DoctorId");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Doctor", b =>
                {
                    b.HasOne("InternetHospital.DataAccess.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("InternetHospital.DataAccess.Entities.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.HasOne("InternetHospital.DataAccess.Entities.Specialization")
                        .WithMany("Doctors")
                        .HasForeignKey("SpecializationId");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.Patient", b =>
                {
                    b.HasOne("InternetHospital.DataAccess.Entities.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");

                    b.HasOne("InternetHospital.DataAccess.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("InternetHospital.DataAccess.Entities.User", b =>
                {
                    b.HasOne("InternetHospital.DataAccess.Entities.Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.HasOne("InternetHospital.DataAccess.Entities.Status")
                        .WithMany("Users")
                        .HasForeignKey("StatusId");
                });
#pragma warning restore 612, 618
        }
    }
}
